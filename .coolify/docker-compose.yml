version: '3.8'

services:
  # PHP Application Container
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: storage-boxx-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
    environment:
      - PHP_IDE_CONFIG=serverName=storage-boxx
    networks:
      - storage-boxx-network
    depends_on:
      - db
      - redis
    labels:
      - "coolify.managed=true"

  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: storage-boxx-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - .:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - storage-boxx-network
    depends_on:
      - app
    labels:
      - "coolify.managed=true"
      - "traefik.enable=true"
      - "traefik.http.routers.storage-boxx.rule=Host(`inventory.thesupplycircuit.co`)"
      - "traefik.http.routers.storage-boxx.tls=true"
      - "traefik.http.routers.storage-boxx.tls.certresolver=letsencrypt"

  # PostgreSQL Database (for Supabase compatibility)
  db:
    image: postgres:15-alpine
    container_name: storage-boxx-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-storageboxx}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgresql/init:/docker-entrypoint-initdb.d
    networks:
      - storage-boxx-network
    labels:
      - "coolify.managed=true"

  # Redis for Caching and Sessions
  redis:
    image: redis:7-alpine
    container_name: storage-boxx-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}
    volumes:
      - redis_data:/data
    networks:
      - storage-boxx-network
    labels:
      - "coolify.managed=true"

  # MySQL (Legacy database - for migration period)
  mysql:
    image: mysql:8.0
    container_name: storage-boxx-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-mysql123}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-storageboxx}
      MYSQL_USER: ${MYSQL_USER:-storage}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-storage123}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    networks:
      - storage-boxx-network
    command: --default-authentication-plugin=mysql_native_password
    labels:
      - "coolify.managed=true"

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  mysql_data:
    driver: local

networks:
  storage-boxx-network:
    driver: bridge