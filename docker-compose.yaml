version: '3.8'

services:
  # Nginx Web Server for Coolify
  nginx:
    image: 'nginx:alpine'
    container_name: storage-boxx-nginx
    restart: unless-stopped
    expose:
      - "80"
    volumes:
      - storage_data:/var/www/html
    command: >
      sh -c '
      cat > /etc/nginx/conf.d/default.conf << "EOF"
      server {
          listen 80;
          server_name _;
          root /var/www/html;
          index index.php index.html;
          
          # Enable gzip compression
          gzip on;
          gzip_types text/plain text/css application/json application/javascript text/xml application/xml;
          
          # Security headers
          add_header X-Frame-Options "SAMEORIGIN" always;
          add_header X-Content-Type-Options "nosniff" always;
          add_header X-XSS-Protection "1; mode=block" always;
          
          # Main location block
          location / {
              try_files $uri $uri/ /index.php?$query_string;
          }
          
          # PHP-FPM processing
          location ~ \.php$ {
              try_files $uri =404;
              fastcgi_split_path_info ^(.+\.php)(/.+)$;
              fastcgi_pass app:9000;
              fastcgi_index index.php;
              fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
              fastcgi_param PATH_INFO $fastcgi_path_info;
              fastcgi_read_timeout 300;
              fastcgi_connect_timeout 300;
              fastcgi_send_timeout 300;
              include fastcgi_params;
          }
          
          # Health check endpoint
          location /health {
              access_log off;
              return 200 "healthy\n";
              add_header Content-Type text/plain;
          }
          
          # Deny access to hidden files
          location ~ /\. {
              deny all;
          }
          
          # Static file handling
          location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
              expires 1y;
              add_header Cache-Control "public, immutable";
              try_files $uri =404;
          }
      }
      EOF
      nginx -g "daemon off;"
      '
    networks:
      - storage-boxx-network
    depends_on:
      - app

  # PHP Application - Backend for Nginx
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: storage-boxx-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
      - storage_data:/var/www/html/storage
    networks:
      - storage-boxx-network
    depends_on:
      - db
      - redis

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: storage-boxx-db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${DB_NAME:-storageboxx}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgresql/init:/docker-entrypoint-initdb.d
    networks:
      - storage-boxx-network

  # Redis for Caching and Sessions
  redis:
    image: redis:7-alpine
    container_name: storage-boxx-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}
    volumes:
      - redis_data:/data
    networks:
      - storage-boxx-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  storage_data:
    driver: local

networks:
  storage-boxx-network:
    driver: bridge
