version: '3.8'

services:
  # PHP Application Container
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: storage-boxx-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    environment:
      - PHP_IDE_CONFIG=serverName=storage-boxx
    networks:
      - storage-boxx-network
    depends_on:
      - db
      - redis

  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: storage-boxx-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - .:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
      - ./docker/nginx/logs:/var/log/nginx
    networks:
      - storage-boxx-network
    depends_on:
      - app

  # PostgreSQL Database (for Supabase compatibility testing)
  db:
    image: postgres:15-alpine
    container_name: storage-boxx-db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${DB_NAME:-storageboxx}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgresql/init:/docker-entrypoint-initdb.d
    networks:
      - storage-boxx-network

  # Redis for Caching and Sessions
  redis:
    image: redis:7-alpine
    container_name: storage-boxx-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}
    volumes:
      - redis_data:/data
    networks:
      - storage-boxx-network

  # MySQL (Legacy database - for migration period)
  mysql:
    image: mysql:8.0
    container_name: storage-boxx-mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-mysql123}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-storageboxx}
      MYSQL_USER: ${MYSQL_USER:-storage}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-storage123}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    networks:
      - storage-boxx-network
    command: --default-authentication-plugin=mysql_native_password

  # Adminer for Database Management
  adminer:
    image: adminer:latest
    container_name: storage-boxx-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - storage-boxx-network
    depends_on:
      - db
      - mysql

  # MailHog for Email Testing (Development)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: storage-boxx-mail
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - storage-boxx-network

  # Certbot for SSL Certificate Management
  certbot:
    image: certbot/certbot:latest
    container_name: storage-boxx-certbot
    volumes:
      - ./docker/nginx/ssl:/etc/letsencrypt
      - ./docker/nginx/webroot:/var/www/certbot
    networks:
      - storage-boxx-network
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  mysql_data:
    driver: local

networks:
  storage-boxx-network:
    driver: bridge